FileAST
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: n
TypeDecl: n
IdentifierType: ['int']
Decl: arr
ArrayDecl:
TypeDecl: arr
IdentifierType: ['int']
Constant: 20
Decl: maxTill
ArrayDecl:
TypeDecl: maxTill
IdentifierType: ['int']
Constant: 20
Decl: i
TypeDecl: i
IdentifierType: ['int']
Decl: j
TypeDecl: j
IdentifierType: ['int']
Decl: max
TypeDecl: max
IdentifierType: ['int']
Constant: 0
Decl: maxtill
ArrayDecl:
TypeDecl: maxtill
IdentifierType: ['int']
Constant: 20
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: n
For:
Assignment: =
ID: i
Constant: 0
BinaryOp: <
ID: i
ID: n
UnaryOp: p++
ID: i
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ArrayRef:
ID: arr
ID: i
For:
Assignment: =
ID: i
Constant: 1
BinaryOp: <
ID: i
ID: n
UnaryOp: p++
ID: i
Compound:
For:
Assignment: =
ID: j
Constant: 0
BinaryOp: <
ID: j
ID: i
UnaryOp: p++
ID: j
Compound:
If:
BinaryOp: <
ArrayRef:
ID: arr
ID: j
ArrayRef:
ID: arr
ID: i
Compound:
If:
BinaryOp: <
ID: max
ArrayRef:
ID: maxTill
ID: j
Assignment: =
ID: max
ArrayRef:
ID: maxtill
ID: j
EmptyStatement:
Assignment: =
ArrayRef:
ID: maxTill
ID: i
BinaryOp: +
ID: max
Constant: 1
Assignment: =
ID: max
Constant: 0
For:
Assignment: =
ID: i
Constant: 0
BinaryOp: <
ID: i
ID: n
UnaryOp: p++
ID: i
Compound:
If:
BinaryOp: <
ID: max
ArrayRef:
ID: maxTill
ID: i
EmptyStatement:
Assignment: =
ID: max
ArrayRef:
ID: maxTill
ID: i
FuncCall:
ID: printf
ExprList:
Constant: "%d"
ID: max
Return:
Constant: 0
