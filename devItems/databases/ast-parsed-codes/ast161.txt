FileAST
Decl: A
ArrayDecl:
TypeDecl: A
IdentifierType: ['int']
Constant: 20
FuncDef:
Decl: f
FuncDecl:
ParamList:
Decl: MaxTill
ArrayDecl:
TypeDecl: MaxTill
IdentifierType: ['int']
Decl: i
TypeDecl: i
IdentifierType: ['int']
TypeDecl: f
IdentifierType: ['void']
Compound:
Decl: j
TypeDecl: j
IdentifierType: ['int']
Decl: max
TypeDecl: max
IdentifierType: ['int']
Decl: f
TypeDecl: f
IdentifierType: ['int']
Decl: Maxtill
ArrayDecl:
TypeDecl: Maxtill
IdentifierType: ['int']
Constant: 100
For:
Assignment: =
ID: j
BinaryOp: -
ID: i
Constant: 1
BinaryOp: >=
ID: j
Constant: 0
UnaryOp: p--
ID: j
Compound:
If:
BinaryOp: <
ArrayRef:
ID: A
ID: j
ArrayRef:
ID: A
ID: i
Compound:
If:
BinaryOp: <
ID: max
ArrayRef:
ID: Maxtill
ID: j
Compound:
Assignment: =
ID: max
ArrayRef:
ID: MaxTill
ID: j
Assignment: =
ID: f
Constant: 1
If:
ID: f
Assignment: =
ArrayRef:
ID: MaxTill
ID: i
BinaryOp: +
ID: max
Constant: 1
Assignment: =
ArrayRef:
ID: MaxTill
ID: i
Constant: 1
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: N
TypeDecl: N
IdentifierType: ['int']
Decl: i
TypeDecl: i
IdentifierType: ['int']
Decl: MaxTill
ArrayDecl:
TypeDecl: MaxTill
IdentifierType: ['int']
Constant: 20
Decl: max
TypeDecl: max
IdentifierType: ['int']
FuncCall:
ID: sacnf
ExprList:
Constant: "%d"
UnaryOp: &
ID: N
For:
Assignment: =
ID: i
Constant: 0
BinaryOp: <
ID: i
ID: N
UnaryOp: p++
ID: i
Compound:
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ArrayRef:
ID: A
ID: i
Assignment: =
ArrayRef:
ID: MaxTill
Constant: 0
Constant: 1
For:
Assignment: =
ID: i
Constant: 1
BinaryOp: <
ID: i
ID: N
UnaryOp: p++
ID: i
Compound:
FuncCall:
ID: f
ExprList:
ID: MaxTill
ID: i
Assignment: =
ID: max
ArrayRef:
ID: MaxTill
Constant: 0
For:
Assignment: =
ID: i
Constant: 1
BinaryOp: <
ID: i
ID: N
UnaryOp: p++
ID: i
Compound:
If:
BinaryOp: <
ID: max
ArrayRef:
ID: MaxTill
ID: i
Assignment: =
ID: max
ArrayRef:
ID: MaxTill
ID: i
FuncCall:
ID: printf
ExprList:
Constant: "%d"
ID: max
