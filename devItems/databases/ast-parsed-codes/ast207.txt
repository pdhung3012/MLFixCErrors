FileAST
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: array
ArrayDecl:
TypeDecl: array
IdentifierType: ['int']
Constant: 100000
Decl: o
TypeDecl: o
IdentifierType: ['int']
Decl: n
TypeDecl: n
IdentifierType: ['int']
Decl: i
TypeDecl: i
IdentifierType: ['int']
Decl: j
TypeDecl: j
IdentifierType: ['int']
Decl: sum
TypeDecl: sum
IdentifierType: ['int']
ID: o
Decl: t
TypeDecl: t
IdentifierType: ['int']
Constant: 0
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: n
For:
Assignment: =
ID: i
Constant: 0
BinaryOp: <
ID: i
ID: n
UnaryOp: p++
ID: i
Compound:
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
ArrayRef:
ID: array
ID: i
For:
Assignment: =
ID: i
Constant: 0
BinaryOp: <
ID: i
ID: n
UnaryOp: p++
ID: i
Compound:
For:
Assignment: =
ID: j
Constant: 0
BinaryOp: <
ID: j
ID: i
UnaryOp: p++
ID: j
Compound:
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
ArrayRef:
ID: array
ID: j
UnaryOp: p++
ID: j
Assignment: =
ID: t
BinaryOp: +
ArrayRef:
ID: array
ID: i
ArrayRef:
ID: array
ID: j
If:
BinaryOp: >
ArrayRef:
ID: array
ID: i
ID: o
Compound:
FuncCall:
ID: printf
ExprList:
Constant: "%d of t is true"
ID: t
FuncCall:
ID: printf
ExprList:
Constant: "%d of t is false"
ID: t
Assignment: =
ID: sum
BinaryOp: +
ID: sum
ID: t
FuncCall:
ID: printf
ExprList:
Constant: "%d"
ID: sum
UnaryOp: p++
ID: sum
Return:
Constant: 0
