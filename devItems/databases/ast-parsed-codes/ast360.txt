FileAST
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: t
TypeDecl: t
IdentifierType: ['int']
Decl: i
TypeDecl: i
IdentifierType: ['int']
Decl: a
ArrayDecl:
TypeDecl: a
IdentifierType: ['int']
Constant: 20
Decl: j
TypeDecl: j
IdentifierType: ['int']
Decl: l
TypeDecl: l
IdentifierType: ['int']
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: t
For:
Assignment: =
ID: i
Constant: 0
BinaryOp: <
ID: i
ID: t
UnaryOp: p++
ID: i
Compound:
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ArrayRef:
ID: a
ID: i
For:
Assignment: =
ID: j
Constant: 0
BinaryOp: <
ID: j
ID: t
UnaryOp: p++
ID: j
Compound:
Assignment: =
ID: l
Constant: 0
While:
BinaryOp: <
ArrayRef:
ID: a
ID: l
ID: j
Compound:
Decl: k
TypeDecl: k
IdentifierType: ['int']
FuncCall:
ID: printf
ExprList:
Constant: "%d"
ArrayRef:
ID: a
BinaryOp: -
ID: l
Constant: 1
Return:
Constant: 0
FuncDef:
Decl: factorial
FuncDecl:
ParamList:
Decl: k
TypeDecl: k
IdentifierType: ['int']
TypeDecl: factorial
IdentifierType: ['int']
Compound:
If:
BinaryOp: ||
BinaryOp: ==
ID: k
Constant: 1
BinaryOp: ==
ID: k
Constant: 0
Compound:
Return:
Constant: 1
Return:
BinaryOp: *
ID: k
FuncCall:
ID: factorial
ExprList:
BinaryOp: -
ID: k
Constant: 1
FuncDef:
Decl: comb
FuncDecl:
ParamList:
Decl: n
TypeDecl: n
IdentifierType: ['int']
Decl: r
TypeDecl: r
IdentifierType: ['int']
TypeDecl: comb
IdentifierType: ['long']
Compound:
Return:
BinaryOp: /
FuncCall:
ID: factorial
ExprList:
ID: n
BinaryOp: *
FuncCall:
ID: factorial
ExprList:
BinaryOp: -
ID: n
ID: r
FuncCall:
ID: factorial
ExprList:
ID: r
FuncDef:
Decl: catalan
FuncDecl:
ParamList:
Decl: e
TypeDecl: e
IdentifierType: ['int']
TypeDecl: catalan
IdentifierType: ['int']
Compound:
If:
BinaryOp: ==
ID: e
Constant: 1
Compound:
Return:
Constant: 1
Return:
BinaryOp: *
FuncCall:
ID: catalan
ExprList:
BinaryOp: -
ID: e
Constant: 1
BinaryOp: -
Constant: 4.0
BinaryOp: /
Constant: 6.0
BinaryOp: +
ID: e
Constant: 1
