FileAST
Decl: rev
FuncDecl:
ParamList:
Typename: None
ArrayDecl:
TypeDecl: None
IdentifierType: ['int']
Typename: None
TypeDecl: None
IdentifierType: ['int']
TypeDecl: rev
IdentifierType: ['int']
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: n
TypeDecl: n
IdentifierType: ['int']
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: n
Decl: arr
ArrayDecl:
TypeDecl: arr
IdentifierType: ['int']
ID: n
For:
DeclList:
Decl: i
TypeDecl: i
IdentifierType: ['int']
BinaryOp: <
ID: i
ID: n
UnaryOp: p++
ID: i
Compound:
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ArrayRef:
ID: arr
ID: i
FuncCall:
ID: rev
ExprList:
ID: arr
ID: n
Return:
Constant: 0
FuncDef:
Decl: rev
FuncDecl:
ParamList:
Decl: c
ArrayDecl:
TypeDecl: c
IdentifierType: ['int']
Decl: k
TypeDecl: k
IdentifierType: ['int']
TypeDecl: rev
IdentifierType: ['int']
Compound:
If:
BinaryOp: ==
ID: k
Constant: 0
Compound:
FuncCall:
ID: print
ExprList:
Constant: "%d "
ArrayRef:
ID: c
Constant: 0
Return:
Constant: 0
FuncCall:
ID: printf
ExprList:
Constant: "%d "
ArrayRef:
ID: c
ID: k
FuncCall:
ID: rev
ExprList:
ID: c
ID: k
Return:
Constant: 0
