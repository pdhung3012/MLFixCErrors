FileAST
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: n
TypeDecl: n
IdentifierType: ['int']
Decl: i
TypeDecl: i
IdentifierType: ['int']
Constant: 0
Decl: o
TypeDecl: o
IdentifierType: ['int']
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: n
Decl: book
ArrayDecl:
TypeDecl: book
IdentifierType: ['int']
ID: n
Decl: order
ArrayDecl:
TypeDecl: order
IdentifierType: ['int']
ID: n
For:
Assignment: =
ID: i
ID: o
BinaryOp: <
ID: i
ID: n
UnaryOp: p++
ID: i
Compound:
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ArrayRef:
ID: book
ID: i
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ArrayRef:
ID: order
ID: i
Decl: new_order
ArrayDecl:
TypeDecl: new_order
IdentifierType: ['int']
ID: n
For:
Assignment: =
ID: i
Constant: 0
BinaryOp: <=
ID: i
ID: n
UnaryOp: p++
ID: i
Compound:
Assignment: =
ArrayRef:
ID: new_order
ArrayRef:
ID: order
ID: i
ArrayRef:
ID: book
ID: i
For:
Assignment: =
ID: i
Constant: 0
BinaryOp: <
ID: i
ID: n
UnaryOp: p++
ID: i
Compound:
FuncCall:
ID: printf
ExprList:
Constant: "%d"
ArrayRef:
ID: new_order
ID: i
FuncCall:
ID: printf
ExprList:
Constant: "end"
Return:
Constant: 0
