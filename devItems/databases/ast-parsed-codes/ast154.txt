FileAST
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: n
TypeDecl: n
IdentifierType: ['int']
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: n
Decl: arr
ArrayDecl:
TypeDecl: arr
IdentifierType: ['int']
ID: n
For:
DeclList:
Decl: i
TypeDecl: i
IdentifierType: ['int']
BinaryOp: <
ID: i
ID: n
Assignment: =
ID: i
BinaryOp: +
ID: i
Constant: 1
Compound:
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ArrayRef:
ID: arr
ID: i
Decl: res
TypeDecl: res
IdentifierType: ['int']
Constant: 0
For:
Assignment: =
ID: i
Constant: 1
BinaryOp: <
ID: i
BinaryOp: -
ID: n
Constant: 1
Assignment: =
ID: i
BinaryOp: +
ID: i
Constant: 1
Compound:
If:
BinaryOp: &&
BinaryOp: <
ArrayRef:
ID: arr
ID: i
ArrayRef:
ID: arr
BinaryOp: -
ID: i
Constant: 1
BinaryOp: <
ArrayRef:
ID: arr
ID: i
ArrayRef:
ID: arr
BinaryOp: +
ID: i
Constant: 1
Compound:
Assignment: =
ID: res
Constant: 1
If:
BinaryOp: ==
ID: res
Constant: 0
Compound:
FuncCall:
ID: printf
ExprList:
Constant: "No"
If:
BinaryOp: ==
ID: res
Constant: 1
Compound:
FuncCall:
ID: printf
ExprList:
Constant: "Yes"
Return:
Constant: 0
