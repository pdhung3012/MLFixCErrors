FileAST
FuncDef:
Decl: is_divisor
FuncDecl:
ParamList:
Decl: i
TypeDecl: i
IdentifierType: ['int']
Decl: n
TypeDecl: n
IdentifierType: ['int']
TypeDecl: is_divisor
IdentifierType: ['int']
Compound:
If:
BinaryOp: ==
ID: i
Constant: 0
Return:
Constant: 0
If:
BinaryOp: ==
BinaryOp: %
ID: n
ID: i
Constant: 0
Return:
ID: i
Return:
Constant: 0
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: n
TypeDecl: n
IdentifierType: ['int']
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: n
Decl: a
ArrayDecl:
TypeDecl: a
IdentifierType: ['int']
ID: n
Decl: sum
TypeDecl: sum
IdentifierType: ['int']
Constant: 0
For:
DeclList:
Decl: i
TypeDecl: i
IdentifierType: ['int']
BinaryOp: <
ID: i
ID: n
UnaryOp: p++
ID: i
Compound:
Assignment: =
ArrayRef:
ID: a
ID: i
FuncCall:
ID: is_divsor
ExprList:
ID: i
ID: n
Assignment: =
ID: sum
BinaryOp: +
ID: sum
ArrayRef:
ID: a
ID: i
If:
BinaryOp: ==
ID: sum
ID: n
FuncCall:
ID: printf
ExprList:
Constant: "YES"
FuncCall:
ID: printf
ExprList:
Constant: "NO"
Return:
Constant: 0
