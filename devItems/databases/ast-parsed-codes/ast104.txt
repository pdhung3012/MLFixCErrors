FileAST
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: y1
TypeDecl: y1
IdentifierType: ['int']
Decl: d
TypeDecl: d
IdentifierType: ['int']
Decl: sum
TypeDecl: sum
IdentifierType: ['int']
Constant: 0
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: y1
While:
BinaryOp: !=
ID: y1
Constant: 0
Compound:
Assignment: =
ID: d
BinaryOp: %
ID: y1
Constant: 10
Assignment: =
ID: sum
BinaryOp: +
ID: sum
ID: d
FuncCall:
ID: printf
ExprList:
Constant: "%d "
ID: sum
Assignment: =
ID: y1
BinaryOp: /
ID: y1
Constant: 10
For:
DeclList:
Decl: i
TypeDecl: i
IdentifierType: ['int']
BinaryOp: !=
BinaryOp: %
ID: i
ID: sum
Constant: 0
UnaryOp: p++
ID: i
Compound:
If:
BinaryOp: ==
BinaryOp: %
ID: i
ID: sum
Constant: 0
Compound:
FuncCall:
ID: printf
ExprList:
Constant: "%d"
ID: i
Break:
Return:
Constant: 0
