FileAST
Decl: max
FuncDecl:
ParamList:
Typename: None
TypeDecl: None
IdentifierType: ['int']
Typename: None
TypeDecl: None
IdentifierType: ['int']
TypeDecl: max
IdentifierType: ['int']
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: n
TypeDecl: n
IdentifierType: ['int']
Decl: i
TypeDecl: i
IdentifierType: ['int']
Decl: j
TypeDecl: j
IdentifierType: ['int']
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: n
Decl: arr
ArrayDecl:
TypeDecl: arr
IdentifierType: ['int']
ID: n
Decl: maxtill
ArrayDecl:
TypeDecl: maxtill
IdentifierType: ['int']
ID: n
For:
Assignment: =
ID: i
Constant: 0
BinaryOp: <
ID: i
ID: n
UnaryOp: p++
ID: i
Compound:
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ArrayRef:
ID: arr
ID: i
For:
Assignment: =
ID: i
Constant: 0
BinaryOp: <
ID: i
ID: n
UnaryOp: p++
ID: i
Compound:
For:
Assignment: =
ID: j
BinaryOp: -
ID: i
Constant: 1
BinaryOp: >=
ID: j
Constant: 0
UnaryOp: p--
ID: j
Compound:
If:
BinaryOp: <
ArrayRef:
ID: arr
ID: j
ArrayRef:
ID: arr
ID: i
Compound:
Decl: m
TypeDecl: m
IdentifierType: ['int']
Compound:
ArrayRef:
ID: maxtill
ID: j
Assignment: =
ArrayRef:
ID: maxtill
ID: i
FuncCall:
ID: max
ExprList:
ID: m
Constant: 1
Return:
Constant: 0
FuncDef:
Decl: max
FuncDecl:
ParamList:
Decl: a
TypeDecl: a
IdentifierType: ['int']
Decl: b
TypeDecl: b
IdentifierType: ['int']
TypeDecl: max
IdentifierType: ['int']
Compound:
If:
BinaryOp: >
ID: a
ID: b
Compound:
Return:
ID: a
Compound:
Return:
ID: b
