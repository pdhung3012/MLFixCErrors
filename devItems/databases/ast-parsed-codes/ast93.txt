FileAST
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: n
TypeDecl: n
IdentifierType: ['int']
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: n
Decl: str1
ArrayDecl:
TypeDecl: str1
IdentifierType: ['int']
ID: n
Decl: k
TypeDecl: k
IdentifierType: ['int']
Decl: m
TypeDecl: m
IdentifierType: ['int']
Constant: 0
Decl: i
TypeDecl: i
IdentifierType: ['int']
Decl: a
ArrayDecl:
TypeDecl: a
IdentifierType: ['int']
ID: n
For:
Assignment: =
ID: i
Constant: 0
BinaryOp: <
ID: i
ID: n
UnaryOp: p++
ID: i
Compound:
FuncCall:
ID: scanf
ExprList:
Constant: "%s"
ID: str1
For:
Assignment: =
ID: i
Constant: 0
BinaryOp: <
ID: i
ID: n
UnaryOp: p++
ID: i
Compound:
For:
Assignment: =
ID: k
Constant: 0
BinaryOp: <
ID: k
ID: n
UnaryOp: p++
ID: k
Compound:
If:
BinaryOp: <
BinaryOp: -
ArrayRef:
ID: str1
ID: k
ArrayRef:
ID: str1
ID: i
Constant: 0
Compound:
Assignment: =
ID: m
BinaryOp: +
ID: m
Constant: 1
FuncCall:
ID: printf
ExprList:
Constant: "%d%d"
ArrayRef:
ID: a
ID: k
ArrayRef:
ID: a
ID: i
FuncCall:
ID: printf
ExprList:
Constant: "%d"
ID: m
Return:
Constant: 0
