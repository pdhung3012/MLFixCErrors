FileAST
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: n
TypeDecl: n
IdentifierType: ['int']
Decl: i
TypeDecl: i
IdentifierType: ['int']
Decl: k
TypeDecl: k
IdentifierType: ['int']
Decl: sum
TypeDecl: sum
IdentifierType: ['int']
Constant: 0
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: n
Decl: b
TypeDecl: b
IdentifierType: ['int']
For:
Assignment: =
ID: i
Constant: 0
BinaryOp: <
ID: i
Constant: 4
UnaryOp: p++
ID: i
Compound:
Assignment: =
ID: k
BinaryOp: %
ID: n
Constant: 10
Assignment: =
ID: sum
BinaryOp: +
ID: sum
ID: k
Assignment: =
ID: n
BinaryOp: /
BinaryOp: -
ID: n
ID: k
Constant: 10
Assignment: =
ID: n
ID: b
Assignment: =
ID: k
ID: sum
FuncCall:
ID: printf
ExprList:
Constant: "%dn"
ID: k
For:
Assignment: =
ID: i
Constant: 2016
BinaryOp: <
ID: i
Constant: 2100
UnaryOp: p++
ID: i
Compound:
If:
BinaryOp: ==
BinaryOp: %
ID: n
ID: k
Constant: 0
Compound:
FuncCall:
ID: printf
ExprList:
Constant: "%d"
ID: i
Return:
Constant: 0
