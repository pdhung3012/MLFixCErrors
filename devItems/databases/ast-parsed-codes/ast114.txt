FileAST
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: b
TypeDecl: b
IdentifierType: ['int']
Decl: s
TypeDecl: s
IdentifierType: ['int']
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: b
Assignment: =
ID: s
BinaryOp: +
BinaryOp: +
BinaryOp: +
BinaryOp: /
ID: b
Constant: 1000
BinaryOp: /
BinaryOp: %
ID: b
Constant: 1000
Constant: 100
BinaryOp: /
BinaryOp: %
ID: b
Constant: 100
Constant: 10
BinaryOp: %
ID: b
Constant: 10
For:
DeclList:
Decl: i
TypeDecl: i
IdentifierType: ['int']
BinaryOp: <
ID: i
Constant: 10000
UnaryOp: p++
ID: i
Compound:
If:
BinaryOp: ==
BinaryOp: %
ID: i
ID: s
Constant: 0
Compound:
FuncCall:
ID: printf
ExprList:
Constant: "%d"
ID: i
Break:
Return:
Constant: 0
