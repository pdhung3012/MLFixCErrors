FileAST
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: n
TypeDecl: n
IdentifierType: ['int']
Decl: sum
TypeDecl: sum
IdentifierType: ['int']
Constant: 0
Decl: zero
TypeDecl: zero
IdentifierType: ['int']
Constant: 0
Decl: h
TypeDecl: h
IdentifierType: ['int']
Decl: zer0
TypeDecl: zer0
IdentifierType: ['int']
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: n
For:
DeclList:
Decl: i
TypeDecl: i
IdentifierType: ['int']
Constant: 0
BinaryOp: <
ID: i
ID: n
UnaryOp: p++
ID: i
For:
DeclList:
Decl: j
TypeDecl: j
IdentifierType: ['int']
Constant: 0
BinaryOp: <
ID: j
ID: n
UnaryOp: p++
ID: j
Compound:
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: h
If:
BinaryOp: ==
ID: i
ID: j
Assignment: =
ID: sum
BinaryOp: +
ID: sum
ID: h
If:
BinaryOp: &&
BinaryOp: ==
ID: zer0
Constant: 0
BinaryOp: ==
ID: sum
ID: n
FuncCall:
ID: printf
ExprList:
Constant: "GIVEN %d X %d matrix is NOT an IDENTITY MATRIX"
ID: n
ID: n
FuncCall:
ID: printf
ExprList:
Constant: "GIVEN %d X %d matrix is an IDENTITY MATRIX"
ID: n
ID: n
Return:
Constant: 0
