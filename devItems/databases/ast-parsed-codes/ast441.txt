FileAST
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: m
TypeDecl: m
IdentifierType: ['int']
Decl: n
TypeDecl: n
IdentifierType: ['int']
Decl: x
TypeDecl: x
IdentifierType: ['int']
Decl: y
TypeDecl: y
IdentifierType: ['int']
Decl: arr1
ArrayDecl:
TypeDecl: arr1
IdentifierType: ['int']
ID: m
Decl: arr2
ArrayDecl:
TypeDecl: arr2
IdentifierType: ['int']
ID: n
FuncCall:
ID: scanf
ExprList:
Constant: "%d%d%d%d"
UnaryOp: &
ID: m
UnaryOp: &
ID: n
UnaryOp: &
ID: x
UnaryOp: &
ID: y
For:
DeclList:
Decl: i
TypeDecl: i
IdentifierType: ['int']
BinaryOp: <
ID: i
ID: m
UnaryOp: p++
ID: i
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ArrayRef:
ID: arr1
ID: i
For:
DeclList:
Decl: i
TypeDecl: i
IdentifierType: ['int']
BinaryOp: <
ID: i
ID: n
UnaryOp: p++
ID: i
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ArrayRef:
ID: arr2
ID: i
Return:
Constant: 0
