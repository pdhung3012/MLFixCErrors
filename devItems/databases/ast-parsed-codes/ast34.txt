FileAST
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: a
ArrayDecl:
TypeDecl: a
IdentifierType: ['long', 'long']
Constant: 10000
Decl: r
TypeDecl: r
IdentifierType: ['long', 'long']
Decl: m
TypeDecl: m
IdentifierType: ['int']
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: m
For:
DeclList:
Decl: i
TypeDecl: i
IdentifierType: ['int']
BinaryOp: <
ID: i
ID: m
UnaryOp: p++
ID: i
FuncCall:
ID: scanf
ExprList:
Constant: "%lld"
UnaryOp: &
ArrayRef:
ID: a
ID: i
For:
DeclList:
Decl: i
TypeDecl: i
IdentifierType: ['int']
BinaryOp: <
ID: i
ID: m
UnaryOp: p++
ID: i
Compound:
Assignment: =
ArrayRef:
ID: a
ID: i
BinaryOp: +
ArrayRef:
ID: a
ID: i
Constant: 1
While:
BinaryOp: &&
BinaryOp: ==
ID: r
Constant: 0
BinaryOp: !=
ArrayRef:
ID: a
ID: i
Constant: 0
Compound:
Assignment: =
ArrayRef:
ID: a
ID: i
BinaryOp: /
ArrayRef:
ID: a
ID: i
Constant: 2
Assignment: =
ID: r
BinaryOp: %
ArrayRef:
ID: a
ID: i
Constant: 2
If:
BinaryOp: &&
BinaryOp: ==
ArrayRef:
ID: a
ID: i
Constant: 0
BinaryOp: ==
ID: r
Constant: 1
FuncCall:
ID: printf
ExprList:
Constant: "yes"
FuncCall:
ID: printf
ExprList:
Constant: "no"
Return:
Constant: 0
