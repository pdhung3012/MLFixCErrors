FileAST
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: k
TypeDecl: k
IdentifierType: ['int']
Decl: i
TypeDecl: i
IdentifierType: ['int']
Decl: n
TypeDecl: n
IdentifierType: ['int']
Decl: a
ArrayDecl:
TypeDecl: a
IdentifierType: ['int']
Constant: 100
Decl: sum
TypeDecl: sum
IdentifierType: ['int']
Decl: l
TypeDecl: l
IdentifierType: ['int']
Decl: b
TypeDecl: b
IdentifierType: ['int']
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: k
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: n
For:
Assignment: =
ID: i
Constant: 0
BinaryOp: <
ID: i
ID: n
UnaryOp: p++
ID: i
Compound:
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ArrayRef:
ID: a
ID: i
Compound:
For:
Assignment: =
ID: l
Constant: 0
BinaryOp: <
ID: l
ID: n
UnaryOp: p++
ID: l
Compound:
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ArrayRef:
ID: a
ID: l
Assignment: =
ID: sum
Constant: 0
Assignment: =
ID: sum
BinaryOp: +
ArrayRef:
ID: a
ID: i
ArrayRef:
ID: a
BinaryOp: -
BinaryOp: -
ID: n
ID: l
Constant: 1
If:
BinaryOp: ==
ID: sum
ID: b
FuncCall:
ID: printf
ExprList:
Constant: "lucky"
Return:
Constant: 0
