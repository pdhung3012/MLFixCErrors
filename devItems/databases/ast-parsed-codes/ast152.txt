FileAST
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: i
TypeDecl: i
IdentifierType: ['int']
Decl: n
TypeDecl: n
IdentifierType: ['int']
Decl: c
TypeDecl: c
IdentifierType: ['int']
Constant: 0
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: n
Decl: a
ArrayDecl:
TypeDecl: a
IdentifierType: ['int']
ID: n
For:
Assignment: =
ID: i
Constant: 0
BinaryOp: <
ID: i
ID: n
UnaryOp: p++
ID: i
Compound:
FuncCall:
ID: scanf
ExprList:
Constant: "%dn"
UnaryOp: &
ArrayRef:
ID: a
ID: i
Decl: min
TypeDecl: min
IdentifierType: ['int']
For:
Assignment: =
ID: i
Constant: 1
BinaryOp: <
ID: i
ID: n
UnaryOp: p++
ID: i
Compound:
If:
BinaryOp: &&
BinaryOp: <
ArrayRef:
ID: a
ID: i
ArrayRef:
ID: a
BinaryOp: +
ID: i
Constant: 1
BinaryOp: <
ArrayRef:
ID: a
ID: i
ArrayRef:
ID: a
BinaryOp: -
ID: i
Constant: 1
Assignment: =
ID: c
Constant: 1
If:
BinaryOp: ==
ID: c
Constant: 1
FuncCall:
ID: printf
ExprList:
Constant: "Yes"
FuncCall:
ID: printf
ExprList:
Constant: "No"
Return:
Constant: 0
