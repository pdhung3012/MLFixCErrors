FileAST
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: n
TypeDecl: n
IdentifierType: ['int']
Constant: 3
Decl: i
TypeDecl: i
IdentifierType: ['int']
Decl: r
TypeDecl: r
IdentifierType: ['int']
For:
Assignment: =
ID: r
Constant: 1
BinaryOp: <=
ID: r
ID: n
UnaryOp: p++
ID: r
Compound:
Decl: i
TypeDecl: i
IdentifierType: ['int']
For:
Assignment: =
ID: i
Constant: 1
BinaryOp: <=
ID: i
ID: n
UnaryOp: p++
ID: i
Compound:
Decl: d
TypeDecl: d
IdentifierType: ['int']
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: d
If:
BinaryOp: &&
BinaryOp: !=
ID: d
Constant: 1
BinaryOp: ==
ID: i
Constant: 1
FuncCall:
ID: printf
ExprList:
Constant: "Non"
If:
BinaryOp: &&
BinaryOp: !=
ID: d
Constant: 0
BinaryOp: !=
ID: i
Constant: 1
FuncCall:
ID: printf
ExprList:
Constant: "Non"
If:
BinaryOp: &&
BinaryOp: ==
ID: r
BinaryOp: +
ID: n
Constant: 1
BinaryOp: ==
ID: i
BinaryOp: +
ID: n
Constant: 1
FuncCall:
ID: printf
ExprList:
Constant: "Yesn"
Return:
Constant: 0
