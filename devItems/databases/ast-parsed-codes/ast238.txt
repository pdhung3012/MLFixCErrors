FileAST
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: n
TypeDecl: n
IdentifierType: ['int']
Decl: i
TypeDecl: i
IdentifierType: ['int']
Decl: j
TypeDecl: j
IdentifierType: ['int']
Decl: flag
TypeDecl: flag
IdentifierType: ['int']
Constant: 0
Decl: x
TypeDecl: x
IdentifierType: ['int']
Decl: ctr
TypeDecl: ctr
IdentifierType: ['int']
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: n
For:
Assignment: =
ID: i
Constant: 1
BinaryOp: <=
ID: i
ID: n
UnaryOp: p++
ID: i
Compound:
For:
Assignment: =
ID: j
Constant: 1
BinaryOp: <=
ID: j
ID: n
UnaryOp: p++
ID: j
Compound:
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: x
If:
BinaryOp: ||
BinaryOp: &&
BinaryOp: ==
ID: i
ID: j
BinaryOp: !=
ID: x
Constant: 1
BinaryOp: &&
BinaryOp: !=
ID: i
ID: j
BinaryOp: !=
ID: x
Constant: 0
UnaryOp: p++
ID: flag
If:
BinaryOp: ==
ID: ctr
Constant: 0
FuncCall:
ID: printf
ExprList:
Constant: "GIVEN %dx%d matrix is an IDENTITY MATRIX"
FuncCall:
ID: printf
ExprList:
Constant: "GIVEN %dx%d matrix is NOT an IDENTITY MATRIX"
Return:
Constant: 0
