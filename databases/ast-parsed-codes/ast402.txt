FileAST
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: n
TypeDecl: n
IdentifierType: ['int']
Decl: k
TypeDecl: k
IdentifierType: ['int']
FuncCall:
ID: scanf
ExprList:
Constant: "%d %d"
UnaryOp: &
ID: n
UnaryOp: &
ID: k
Decl: a
ArrayDecl:
TypeDecl: a
IdentifierType: ['int']
ID: n
For:
DeclList:
Decl: i
TypeDecl: i
IdentifierType: ['int']
Constant: 0
BinaryOp: <
ID: i
ID: n
UnaryOp: p++
ID: i
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ArrayRef:
ID: a
ID: i
Decl: max
TypeDecl: max
IdentifierType: ['int']
ArrayRef:
ID: a
Constant: 0
For:
DeclList:
Decl: i
TypeDecl: i
IdentifierType: ['int']
Constant: 1
BinaryOp: <=
ID: i
ID: k
UnaryOp: p++
ID: i
Compound:
Assignment: =
ID: max
ArrayRef:
ID: a
Constant: 0
For:
DeclList:
Decl: j
TypeDecl: j
IdentifierType: ['int']
Constant: 0
BinaryOp: <
ID: j
ID: n
UnaryOp: p++
ID: j
Compound:
If:
BinaryOp: >
ArrayRef:
ID: a
ID: j
ID: max
Compound:
Decl: temp
TypeDecl: temp
IdentifierType: ['int']
Assignment: =
ID: max
ArrayRef:
ID: a
ID: j
Assignment: =
ArrayRef:
ID: a
Constant: 0
ID: max
Assignment: =
ArrayRef:
ID: a
ID: j
ID: temp
Assignment: =
ArrayRef:
ID: a
Constant: 0
Constant: 0
FuncCall:
ID: printf
ExprList:
Constant: "%d"
ID: max
Return:
Constant: 0
