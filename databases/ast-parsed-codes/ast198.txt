FileAST
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: i
TypeDecl: i
IdentifierType: ['int']
Decl: n
TypeDecl: n
IdentifierType: ['int']
Decl: count
TypeDecl: count
IdentifierType: ['int']
Decl: s
TypeDecl: s
IdentifierType: ['int']
Assignment: =
ID: count
Constant: 0
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: n
For:
Assignment: =
ID: i
Constant: 1
BinaryOp: <
ID: i
ID: n
Assignment: =
ID: i
BinaryOp: +
ID: i
Constant: 1
Compound:
If:
BinaryOp: ==
BinaryOp: %
ID: n
ID: i
Constant: 0
Assignment: =
ID: count
BinaryOp: +
ID: count
ID: i
If:
BinaryOp: ==
ID: s
ID: count
Compound:
FuncCall:
ID: printf
ExprList:
Constant: "YES"
Compound:
FuncCall:
ID: printf
ExprList:
Constant: "NO"
Return:
Constant: 0
