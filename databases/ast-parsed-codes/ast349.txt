FileAST
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: k
TypeDecl: k
IdentifierType: ['int']
Decl: i
TypeDecl: i
IdentifierType: ['int']
Decl: n
TypeDecl: n
IdentifierType: ['int']
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: k
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: n
Decl: num
ArrayDecl:
TypeDecl: num
IdentifierType: ['int']
ID: n
For:
Assignment: =
ID: i
Constant: 0
BinaryOp: <=
ID: i
ID: n
UnaryOp: p++
ID: i
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ArrayRef:
ID: num
ID: i
For:
Assignment: =
ID: i
Constant: 0
BinaryOp: <=
ID: i
ID: n
UnaryOp: p++
ID: i
Compound:
For:
DeclList:
Decl: j
TypeDecl: j
IdentifierType: ['int']
BinaryOp: <=
ID: i
ID: n
UnaryOp: p++
ID: j
Compound:
If:
BinaryOp: ==
BinaryOp: +
ArrayRef:
ID: num
ID: i
ArrayRef:
ID: num
ID: j
ID: k
FuncCall:
ID: printf
ExprList:
Constant: "lucky"
Return:
Constant: 0
