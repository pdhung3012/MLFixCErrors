FileAST
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: h
TypeDecl: h
IdentifierType: ['int']
Decl: b
TypeDecl: b
IdentifierType: ['int']
Decl: i
TypeDecl: i
IdentifierType: ['int']
Decl: j
TypeDecl: j
IdentifierType: ['int']
Decl: k
TypeDecl: k
IdentifierType: ['int']
Decl: cnt
TypeDecl: cnt
IdentifierType: ['int']
FuncCall:
ID: scanf
ExprList:
Constant: "%d %d"
UnaryOp: &
ID: h
UnaryOp: &
ID: b
For:
Assignment: =
ID: i
Constant: 1
BinaryOp: <=
ID: i
ID: h
UnaryOp: p++
ID: i
Compound:
For:
Assignment: =
ID: j
Constant: 1
BinaryOp: <=
ID: j
ID: b
UnaryOp: p++
ID: j
Compound:
If:
BinaryOp: >
ID: j
BinaryOp: -
ID: h
ID: i
For:
Assignment: =
ID: k
ID: i
BinaryOp: <=
ID: cnt
BinaryOp: -
ID: b
BinaryOp: *
Constant: 2
BinaryOp: -
ID: h
ID: i
UnaryOp: p++
ID: k
Compound:
If:
BinaryOp: <
ID: k
Constant: 10
Compound:
FuncCall:
ID: printf
ExprList:
Constant: "%d"
ID: k
Compound:
FuncCall:
ID: printf
ExprList:
Constant: "%d"
BinaryOp: %
ID: k
Constant: 10
FuncCall:
ID: printf
ExprList:
Constant: ""
Return:
Constant: 0
