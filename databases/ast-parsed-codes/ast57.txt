FileAST
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: n
TypeDecl: n
IdentifierType: ['int']
Decl: a
ArrayDecl:
TypeDecl: a
IdentifierType: ['int']
Constant: 1000
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: n
For:
DeclList:
Decl: i
TypeDecl: i
IdentifierType: ['int']
Constant: 0
BinaryOp: <
ID: i
ID: n
UnaryOp: p++
ID: i
Compound:
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ArrayRef:
ID: a
ID: i
Decl: Maxtill
ArrayDecl:
TypeDecl: Maxtill
IdentifierType: ['int']
Constant: 1000
For:
DeclList:
Decl: i
TypeDecl: i
IdentifierType: ['int']
Constant: 0
BinaryOp: <
ID: i
ID: n
UnaryOp: p++
ID: i
Compound:
For:
DeclList:
Decl: j
TypeDecl: j
IdentifierType: ['int']
Constant: 0
BinaryOp: <
ID: j
ID: i
UnaryOp: p++
ID: j
Compound:
If:
BinaryOp: >
ArrayRef:
ID: a
ID: i
ArrayRef:
ID: a
ID: j
Compound:
If:
BinaryOp: >
ArrayRef:
ID: Maxtill
ID: j
ArrayRef:
ID: Maxtill
ID: i
Compound:
Assignment: =
ArrayRef:
ID: Maxtill
ID: i
BinaryOp: +
Constant: 1
ArrayRef:
ID: Maxtill
ID: j
Decl: large
TypeDecl: large
IdentifierType: ['int']
ArrayRef:
ID: a
Constant: 0
For:
DeclList:
Decl: i
TypeDecl: i
IdentifierType: ['int']
Constant: 0
BinaryOp: <
ID: i
ID: n
UnaryOp: p++
ID: i
Compound:
If:
BinaryOp: >
ArrayRef:
ID: a
ID: i
ID: large
Compound:
Assignment: =
ID: large
ArrayRef:
ID: a
ID: i
FuncCall:
ID: printf
ExprList:
Constant: "%d"
ID: large
Return:
Constant: 0
