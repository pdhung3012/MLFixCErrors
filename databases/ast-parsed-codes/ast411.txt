FileAST
Decl: alice
TypeDecl: alice
IdentifierType: ['int']
Constant: 0
Decl: bob
TypeDecl: bob
IdentifierType: ['int']
FuncDef:
Decl: game
FuncDecl:
ParamList:
Decl: a
ArrayDecl:
TypeDecl: a
IdentifierType: ['int']
Decl: n
TypeDecl: n
IdentifierType: ['int']
TypeDecl: game
IdentifierType: ['void']
Compound:
Decl: i
TypeDecl: i
IdentifierType: ['int']
Decl: sum1
TypeDecl: sum1
IdentifierType: ['int']
Constant: 0
Decl: sum2
TypeDecl: sum2
IdentifierType: ['int']
Constant: 0
Decl: b
TypeDecl: b
IdentifierType: ['int']
If:
BinaryOp: ==
ID: bob
BinaryOp: +
ID: alice
Constant: 1
Return:
For:
Assignment: =
ID: i
Constant: 0
BinaryOp: <=
ID: i
ID: alice
UnaryOp: p++
ID: i
Assignment: =
ID: sum1
BinaryOp: +
ID: sum1
ArrayRef:
ID: a
ID: i
For:
Assignment: =
ID: i
BinaryOp: -
ID: n
Constant: 1
BinaryOp: >=
ID: i
ID: bob
UnaryOp: p--
ID: i
Assignment: =
ID: sum2
BinaryOp: +
ID: sum2
ArrayRef:
ID: a
ID: i
If:
BinaryOp: <
ID: sum1
ID: sum2
Compound:
UnaryOp: p++
ID: alice
FuncCall:
ID: game
ExprList:
ID: a
ID: n
If:
BinaryOp: >
ID: sum1
ID: sum2
Compound:
UnaryOp: p--
ID: bob
FuncCall:
ID: game
ExprList:
ID: a
ID: n
If:
BinaryOp: ==
ID: sum1
ID: sum2
Compound:
UnaryOp: p++
ID: alice
UnaryOp: p--
ID: bob
FuncCall:
ID: game
ExprList:
ID: a
ID: n
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: n
TypeDecl: n
IdentifierType: ['int']
Decl: i
TypeDecl: i
IdentifierType: ['int']
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: n
Assignment: =
ID: bob
BinaryOp: -
ID: n
Constant: 1
Decl: a
ArrayDecl:
TypeDecl: a
IdentifierType: ['int']
ID: n
For:
Assignment: =
ID: i
Constant: 0
BinaryOp: <
ID: i
ID: n
UnaryOp: p++
ID: i
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ArrayRef:
ID: a
ID: i
FuncCall:
ID: game
ExprList:
ID: a
ID: n
FuncCall:
ID: printf
ExprList:
Constant: "%d %d"
BinaryOp: +
ID: alice
Constant: 1
BinaryOp: -
ID: n
ID: bob
Return:
Constant: 0
