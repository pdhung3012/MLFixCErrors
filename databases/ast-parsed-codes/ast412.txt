FileAST
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: n
TypeDecl: n
IdentifierType: ['int']
Decl: a
TypeDecl: a
IdentifierType: ['int']
Constant: 0
Decl: b
TypeDecl: b
IdentifierType: ['int']
Constant: 0
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: n
Decl: t
PtrDecl:
TypeDecl: t
IdentifierType: ['int']
Assignment: =
ID: t
Cast: None
Typename: None
PtrDecl:
TypeDecl: None
IdentifierType: ['int']
FuncCall:
ID: malloc
ExprList:
BinaryOp: *
UnaryOp: sizeof
Typename: None
TypeDecl: None
IdentifierType: ['int']
ID: n
For:
DeclList:
Decl: i
TypeDecl: i
IdentifierType: ['int']
BinaryOp: <
ID: i
ID: n
UnaryOp: p++
ID: i
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ArrayRef:
ID: t
ID: i
Decl: i
TypeDecl: i
IdentifierType: ['int']
Constant: 0
Decl: j
TypeDecl: j
IdentifierType: ['int']
BinaryOp: -
ID: n
Constant: 1
While:
BinaryOp: !=
ID: i
ID: j
Compound:
If:
BinaryOp: >=
ArrayRef:
ID: t
ID: i
ArrayRef:
ID: t
ID: j
Compound:
UnaryOp: p--
ID: j
UnaryOp: p++
ID: b
Assignment: =
ArrayRef:
ID: t
ID: i
BinaryOp: -
ArrayRef:
ID: t
ID: i
ArrayRef:
ID: t
ID: j
If:
BinaryOp: <
ArrayRef:
ID: t
ID: i
ArrayRef:
ID: t
ID: j
Compound:
UnaryOp: p++
ID: i
UnaryOp: p++
ID: a
Assignment: =
ArrayRef:
ID: t
ID: j
BinaryOp: -
ArrayRef:
ID: t
ID: j
ArrayRef:
ID: t
ID: i
FuncCall:
ID: printf
ExprList:
Constant: "%d %d"
ID: a
ID: b
Return:
Constant: 0
