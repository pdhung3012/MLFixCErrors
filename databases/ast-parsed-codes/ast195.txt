FileAST
FuncDef:
Decl: is_perfect
FuncDecl:
ParamList:
Decl: a
TypeDecl: a
IdentifierType: ['int']
TypeDecl: is_perfect
IdentifierType: ['int']
Compound:
Decl: d
ArrayDecl:
TypeDecl: d
IdentifierType: ['int']
Constant: 10000
Decl: i
TypeDecl: i
IdentifierType: ['int']
Decl: count
TypeDecl: count
IdentifierType: ['int']
Constant: 0
Decl: sum
TypeDecl: sum
IdentifierType: ['int']
Constant: 0
For:
Assignment: =
ID: i
Constant: 0
BinaryOp: <
ID: i
ID: a
UnaryOp: p++
ID: i
Compound:
If:
BinaryOp: ==
BinaryOp: %
ID: a
ID: i
Constant: 0
Assignment: =
ArrayRef:
ID: d
ID: i
Constant: 0
Continue:
Assignment: =
ID: count
BinaryOp: +
ID: count
Constant: 1
For:
DeclList:
Decl: j
TypeDecl: j
IdentifierType: ['int']
BinaryOp: <
ID: j
ID: count
UnaryOp: p++
ID: j
Compound:
Assignment: =
ID: sum
BinaryOp: +
ID: sum
ArrayRef:
ID: d
ID: j
If:
Assignment: =
ID: sum
ID: a
Return:
Constant: 1
Return:
Constant: 0
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: n
TypeDecl: n
IdentifierType: ['int']
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: n
FuncCall:
ID: is_perfect
ExprList:
ID: n
Return:
Constant: 0
