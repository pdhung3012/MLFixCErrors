FileAST
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: n
TypeDecl: n
IdentifierType: ['int']
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: n
Decl: i
TypeDecl: i
IdentifierType: ['int']
Decl: a
ArrayDecl:
TypeDecl: a
IdentifierType: ['int']
ID: n
For:
Assignment: =
ID: i
Constant: 0
BinaryOp: <=
ID: i
BinaryOp: -
ID: n
Constant: 1
UnaryOp: p++
ID: i
Compound:
If:
BinaryOp: >=
BinaryOp: -
ID: i
Constant: 1
Constant: 0
Compound:
If:
BinaryOp: >
ArrayRef:
ID: a
BinaryOp: -
ID: i
Constant: 1
ArrayRef:
ID: a
ID: i
Compound:
If:
BinaryOp: <=
BinaryOp: +
ID: i
Constant: 1
BinaryOp: -
ID: n
Constant: 1
Compound:
If:
BinaryOp: >
ArrayRef:
ID: a
BinaryOp: +
ID: i
Constant: 1
ArrayRef:
ID: a
ID: i
Compound:
FuncCall:
ID: printf
ExprList:
Constant: "Yes"
Break:
If:
BinaryOp: ==
ID: i
ID: n
FuncCall:
ID: printf
ExprList:
Constant: "No"
Return:
Constant: 0
