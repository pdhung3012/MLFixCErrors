FileAST
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: a
TypeDecl: a
IdentifierType: ['double']
Decl: b
TypeDecl: b
IdentifierType: ['double']
FuncCall:
ID: scanf
ExprList:
Constant: "%lf%lf"
UnaryOp: &
ID: a
UnaryOp: &
ID: b
Decl: n
TypeDecl: n
IdentifierType: ['int']
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: n
Decl: area
TypeDecl: area
IdentifierType: ['double']
Decl: x
ArrayDecl:
TypeDecl: x
IdentifierType: ['float']
Constant: 10000
Decl: f
ArrayDecl:
TypeDecl: f
IdentifierType: ['float']
Constant: 10000
Decl: g
ArrayDecl:
TypeDecl: g
IdentifierType: ['float']
Constant: 10000
For:
DeclList:
Decl: i
TypeDecl: i
IdentifierType: ['int']
BinaryOp: <
ID: i
ID: n
UnaryOp: p++
ID: i
Compound:
Assignment: =
ArrayRef:
ID: x
ID: i
BinaryOp: +
ID: a
BinaryOp: /
BinaryOp: *
BinaryOp: -
ID: b
ID: a
ID: i
ID: n
Assignment: =
ArrayRef:
ID: f
ArrayRef:
ID: x
ID: i
BinaryOp: +
BinaryOp: *
UnaryOp: -
ArrayRef:
ID: x
ID: i
ArrayRef:
ID: x
ID: i
BinaryOp: *
Constant: 3
ArrayRef:
ID: x
ID: i
Return:
Constant: 0
