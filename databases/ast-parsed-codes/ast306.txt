FileAST
Decl: catalan
FuncDecl:
ParamList:
Decl: n
TypeDecl: n
IdentifierType: ['int']
TypeDecl: catalan
IdentifierType: ['long', 'int']
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: num
TypeDecl: num
IdentifierType: ['int']
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: num
Decl: i
TypeDecl: i
IdentifierType: ['int']
Decl: a
ArrayDecl:
TypeDecl: a
IdentifierType: ['int']
ID: num
For:
Assignment: =
ID: i
Constant: 0
BinaryOp: <
ID: i
ID: num
UnaryOp: p++
ID: i
Compound:
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ArrayRef:
ID: a
ID: i
FuncCall:
ID: printf
ExprList:
Constant: "%ld"
FuncCall:
ID: catalan
ExprList:
ArrayRef:
ID: a
ID: i
Return:
Constant: 0
FuncDef:
Decl: catalan
FuncDecl:
ParamList:
Decl: n
TypeDecl: n
IdentifierType: ['int']
TypeDecl: catalan
IdentifierType: ['long', 'int']
Compound:
Decl: n_1
TypeDecl: n_1
IdentifierType: ['int']
If:
BinaryOp: ==
ID: n
Constant: 0
Return:
Constant: 0
If:
BinaryOp: ==
ID: n
Constant: 1
Return:
Constant: 1
Return:
BinaryOp: *
BinaryOp: /
BinaryOp: *
Constant: 2
BinaryOp: -
BinaryOp: *
Constant: 2
ID: n
Constant: 1
ID: n_1
FuncCall:
ID: catalan
ExprList:
BinaryOp: -
ID: n
Constant: 1
