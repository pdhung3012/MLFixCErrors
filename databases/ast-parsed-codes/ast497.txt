FileAST
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: x1
TypeDecl: x1
IdentifierType: ['int']
Decl: x2
TypeDecl: x2
IdentifierType: ['int']
Decl: y1
TypeDecl: y1
IdentifierType: ['int']
Decl: y2
TypeDecl: y2
IdentifierType: ['int']
Decl: slop
TypeDecl: slop
IdentifierType: ['float']
FuncCall:
ID: scanf
ExprList:
Constant: "%d%d%d%d"
UnaryOp: &
ID: x1
UnaryOp: &
ID: x2
UnaryOp: &
ID: y1
UnaryOp: &
ID: y2
Decl: slope
TypeDecl: slope
IdentifierType: ['float']
If:
BinaryOp: &&
BinaryOp: &&
BinaryOp: &&
BinaryOp: &&
BinaryOp: <=
BinaryOp: <=
UnaryOp: -
Constant: 100
ID: x1
Constant: 100
BinaryOp: <=
BinaryOp: <=
UnaryOp: -
Constant: 100
ID: y1
Constant: 100
BinaryOp: <=
BinaryOp: <=
UnaryOp: -
Constant: 100
ID: x2
Constant: 100
BinaryOp: <=
BinaryOp: <=
UnaryOp: -
Constant: 100
ID: y2
Constant: 100
BinaryOp: !=
ID: x1
ID: x2
Compound:
FuncCall:
ID: printf
ExprList:
Constant: "%f"
ID: slop
If:
BinaryOp: ==
ID: x1
ID: x2
Compound:
FuncCall:
ID: printf
ExprList:
Constant: "inf"
Return:
Constant: 0
