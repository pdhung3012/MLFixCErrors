FileAST
FuncDef:
Decl: catalan
FuncDecl:
ParamList:
Decl: x
TypeDecl: x
IdentifierType: ['int']
TypeDecl: catalan
IdentifierType: ['int']
Compound:
Decl: n
TypeDecl: n
IdentifierType: ['int']
If:
BinaryOp: <=
ID: n
Constant: 0
Compound:
Return:
Constant: 1
Compound:
Return:
BinaryOp: /
BinaryOp: *
BinaryOp: *
Constant: 2
FuncCall:
ID: cat
ExprList:
BinaryOp: -
ID: n
Constant: 1
BinaryOp: -
BinaryOp: *
Constant: 2
ID: n
Constant: 1
BinaryOp: +
ID: n
Constant: 1
FuncDef:
Decl: main
FuncDecl:
TypeDecl: main
IdentifierType: ['int']
Compound:
Decl: i
TypeDecl: i
IdentifierType: ['int']
Decl: t
TypeDecl: t
IdentifierType: ['int']
Decl: x
TypeDecl: x
IdentifierType: ['int']
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: t
For:
Assignment: =
ID: i
Constant: 0
BinaryOp: <
ID: i
ID: t
UnaryOp: p++
ID: i
Compound:
FuncCall:
ID: scanf
ExprList:
Constant: "%d"
UnaryOp: &
ID: x
FuncCall:
ID: printf
ExprList:
Constant: "%d"
FuncCall:
ID: catalan
ExprList:
ID: x
Return:
Constant: 0
